# -*- coding: UTF-8 -*-

print "hello python yes"

#  ----------> 1 代码块 <----------  #

# python的一大特点就是 "代码快" 不使用 "{}" 来控制。 注意缩进的数量是可变的，但是缩进的数量必须相等

if True:
    print "YES"
else:
    print "NO"

if True:
    print "2Yes"
else:
    print "2No"






# ----------> 2 多行语句 <----------  #

# Python语句中一般以新行作为为语句的结束符。
# 1)、但是我们可以使用斜杠（ \）将一行的语句分为多行显示

total = 1 + \
        2 + \
        3
print total

# 2)、语句中包含 [], {} 或 () 括号就不需要使用多行连接符
days = ['Monday', 'Tuesday', 'Wednesday',
        'Thursday', 'Friday']
print days


# ----------> 3 Python 引号 <----------  #

# Python 可以使用引号( ' )、双引号( " )、三引号( ''' 或 """ ) 来表示字符串，引号的开始与结束必须的相同类型的。
# 其中三引号可以由多行组成，编写多行文本的快捷语法，常用于文档字符串，在文件的特定地点，被当做注释。

word = 'word'
sentence = "这是一个句子。"
paragraph = """这是一个段落。
包含了多个语句"""

print word
print sentence
print paragraph





# ----------> 4 Python 引号 <----------  #

# python中单行注释采用 # 开头, 注释可以在语句或表达式行末：
name = "Madisetti" # 这是一个注释

# python 中多行注释使用三个单引号(''')或三个双引号(""")。

'''
这是多行注释，使用单引号。
这是多行注释，使用单引号。
这是多行注释，使用单引号。
'''

"""
这是多行注释，使用双引号。
这是多行注释，使用双引号。
这是多行注释，使用双引号。
"""


# ----------> 5 Python空行 <----------  #
'''函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。
空行与代码缩进不同，空行并不是Python语法的一部分。书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。
记住：空行也是程序代码的一部分。
'''


# ----------> 6 等待用户输入 <----------  #
# 下面的程序执行后就会等待用户输入，按回车键后就会退出：

# raw_input("\n\nPress the enter key to exit.")

'''以上代码中 ，"\n\n"在结果输出前会输出两个新的空行。一旦用户按下 enter(回车) 键退出，其它键显示。'''



# ----------> 7 同一行显示多条语句 <----------  #
'''Python可以在同一行中使用多条语句，语句之间使用分号(;)分割，以下是一个简单的实例：'''
import sys; x = 'runoob'; sys.stdout.write(x + '\n')



# ----------> 8 Print 输出 <----------  #
# print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 "逗号

x="a"
y="b"
# 换行输出
print x
print y

print '---------'
# 不换行输出
print x,
print y,